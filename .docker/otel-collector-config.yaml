receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318
  filelog:
    include_file_path: true
    include: [/var/log/service-a/*.log,/var/log/service-b/*.log,/var/log/service-c/*.log] 
    start_at: end
    operators:
      - type: router
        routes:
          - expr: 'body matches "^\\s*\\{"'  # JSON
            output: json
          - expr: 'body matches "^[a-zA-Z0-9_.\\-]+=.*"'  # logfmt simples
            output: logfmt_regex
          - expr: 'true'  # fallback: tudo que n√£o for JSON nem logfmt
            output: raw
      - type: json_parser
        id: json
        parse_from: body
        timestamp:
          parse_from: attributes.time
          layout: '%Y-%m-%dT%H:%M:%S.%fZ'
        severity:
          parse_from: attributes.level
        agent:
          parse_from: attributes.agent
      - type: regex_parser
        id: logfmt_regex
        parse_from: body
        regex: 'level="(?P<level>[^\"]+)" time="(?P<time>[^\"]+)" caller="(?P<caller>[^\"]+)" msg="(?P<msg>[^\"]+)" traceId="(?P<traceId>[^\"]+)" spanId="(?P<spanId>[^\"]+)" service_name="(?P<service_name>[^\"]+)"'
        timestamp:
          parse_from: attributes.time
          layout: '%Y-%m-%dT%H:%M:%S.%fZ'
        severity:
          parse_from: attributes.level
        agent:
          parse_from: attributes.agent
      - type: move
        id: raw
        from: body
        to: body  # apenas encaminha o log bruto
  

extensions:
  health_check: {}
  pprof:
    endpoint: :1888
  zpages:
    endpoint: :55679
    
exporters:
  otlp/jaeger:
    endpoint: "jaeger:4317"
    tls:
      insecure: true
  prometheus:
    endpoint: "0.0.0.0:8889"
  otlphttp/logs:
    endpoint: "http://loki:3100/otlp"
    tls:
      insecure: true

processors:
  batch: {}
  resource:
    attributes:
      - action: insert
        key: agent
        value: otel-collector
      - action: insert
        key: loki.attribute.labels
        value: service_name
  transform:
    log_statements:
      - context: log
        statements:
          - set(resource.attributes["service.name"], attributes["service_name"])

service:
  extensions: [pprof, zpages, health_check]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [batch]
      exporters: [otlp/jaeger]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [prometheus]
    logs:
      receivers: [filelog]
      exporters: [otlphttp/logs]
      processors: [transform, batch, resource]
